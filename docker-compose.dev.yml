# 开发环境：内置 redis + redis-commander；bot 指向服务名 redis
services:
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    restart: unless-stopped
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379" # 需要宿主机访问就保留；不需要可删除
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks: [bot_network]

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=redis://192.168.0.105:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks: [bot_network]

  bot:
    build:
      context: .
      target: dev
    env_file:
      - .env # 可选：若希望本地也读同一套变量（建议准备一个 .env.dev）
    environment:
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=development
      - TZ=Asia/Phnom_Penh
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json:ro
      - ./tsconfig.json:/app/tsconfig.json:ro
      - ./nodemon.json:/app/nodemon.json:ro
    networks: [bot_network]
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_dev_data:

networks:
  bot_network:
    driver: bridge
